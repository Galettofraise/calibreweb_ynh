#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

if [ ! -e _common.sh ]; then
	# Get the _common.sh file if it's not in the current directory
	cp ../settings/scripts/_common.sh ./_common.sh
	chmod a+rx _common.sh
fi
source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
final_path=$(ynh_app_setting_get $app final_path)
calibre_dir=$(ynh_app_setting_get $app calibre_dir)
is_public=$(ynh_app_setting_get $app is_public)
port=$(ynh_app_setting_get $app port)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================

ynh_webpath_available $domain $path_url \
	|| ynh_die "Path not available: ${domain}${path_url}"
test ! -d $final_path \
	|| ynh_die "There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_print_info "Restore nginx settings"
ynh_restore_file "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# REOPEN PORT
#=================================================

ynh_print_info "Reopening port $port"
yunohost firewall allow --no-upnp TCP $port 2>&1
ynh_app_setting_set $app port $port

#=================================================
# RECREATE THE DEDICATED USER
#=================================================

ynh_print_info "Restore user $app"
# Create the dedicated user (if not existing)
ynh_system_user_create $app

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_print_info "Restore app directory $final_path"
ynh_restore_file "$final_path"

#=================================================
# RESTORE USER RIGHTS
#=================================================

# Restore permissions on app files
chown -R $app: $final_path

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================

# Define and install dependencies
ynh_print_info "Installing dependencies and pip packages"
ynh_install_app_dependencies $pkg_dependencies
pip install --target $final_path/vendor -r $final_path/requirements.txt

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --log "/var/log/$app/$app.log"

#=================================================
# RESTORE SYSTEMD
#=================================================

ynh_restore_file "/etc/systemd/system/$app.service"
systemctl enable $app.service


#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================

ynh_restore_file "/etc/logrotate.d/$app"
if [ ! -e /var/log/$app ]; then
	mkdir /var/log/$app
fi
chown -R $app:$app /var/log/$app

#=================================================
# RESTORE THE DATA DIRECTORY
#=================================================


# The data directory will be restored only if it exists in the backup archive
# So only if it was backup previously.
if [ -d "$YNH_BACKUP_DIR/apps/$app/backup/$calibre_dir" ]
then
	ynh_restore_file "$calibre_dir"
else
	if [ ! -e "$calibre_dir" ]; then
		ynh_print_info "Create calibre library folder $calibre_dir"
		mkdir -p $calibre_dir
		chown -R $app:$app $calibre_dir
	fi
#Check if metadata.db file exists. If not create it (empty library)
	if [ ! -e "$calibre_dir"/metadata.db ]; then
		cp -a ../settings/conf/metadata.db.empty $calibre_dir/metadata.db
		chown $app:$app $calibre_dir/*
	fi
fi
# Remove the option backup_core_only if it's in the settings.yml file
ynh_app_setting_delete $app backup_core_only

#=================================================
# SETUP SSOWAT
#=================================================

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set $app unprotected_uris "/"
fi

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reload nginx and start $app"
systemctl reload nginx
ynh_systemd_action -l "INFO in server: Starting Gevent server"

#=================================================
# WARNING FOR READ ACCESS
#=================================================
ynh_print_warn "Please, give required access to $app user to the $calibre_dir folder."

